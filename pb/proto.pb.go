// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto.proto

package sdccFoodDelivery

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CartItem struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity             int32    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CartItem) Reset()         { *m = CartItem{} }
func (m *CartItem) String() string { return proto.CompactTextString(m) }
func (*CartItem) ProtoMessage()    {}
func (*CartItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{0}
}

func (m *CartItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CartItem.Unmarshal(m, b)
}
func (m *CartItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CartItem.Marshal(b, m, deterministic)
}
func (m *CartItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CartItem.Merge(m, src)
}
func (m *CartItem) XXX_Size() int {
	return xxx_messageInfo_CartItem.Size(m)
}
func (m *CartItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CartItem.DiscardUnknown(m)
}

var xxx_messageInfo_CartItem proto.InternalMessageInfo

func (m *CartItem) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CartItem) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *CartItem) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type AddItemRequest struct {
	UserId               string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RestaurantId         string    `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Item                 *CartItem `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddItemRequest) Reset()         { *m = AddItemRequest{} }
func (m *AddItemRequest) String() string { return proto.CompactTextString(m) }
func (*AddItemRequest) ProtoMessage()    {}
func (*AddItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{1}
}

func (m *AddItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddItemRequest.Unmarshal(m, b)
}
func (m *AddItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddItemRequest.Marshal(b, m, deterministic)
}
func (m *AddItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddItemRequest.Merge(m, src)
}
func (m *AddItemRequest) XXX_Size() int {
	return xxx_messageInfo_AddItemRequest.Size(m)
}
func (m *AddItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddItemRequest proto.InternalMessageInfo

func (m *AddItemRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddItemRequest) GetRestaurantId() string {
	if m != nil {
		return m.RestaurantId
	}
	return ""
}

func (m *AddItemRequest) GetItem() *CartItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type EmptyCartRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyCartRequest) Reset()         { *m = EmptyCartRequest{} }
func (m *EmptyCartRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyCartRequest) ProtoMessage()    {}
func (*EmptyCartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{2}
}

func (m *EmptyCartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyCartRequest.Unmarshal(m, b)
}
func (m *EmptyCartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyCartRequest.Marshal(b, m, deterministic)
}
func (m *EmptyCartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyCartRequest.Merge(m, src)
}
func (m *EmptyCartRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyCartRequest.Size(m)
}
func (m *EmptyCartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyCartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyCartRequest proto.InternalMessageInfo

func (m *EmptyCartRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetCartRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCartRequest) Reset()         { *m = GetCartRequest{} }
func (m *GetCartRequest) String() string { return proto.CompactTextString(m) }
func (*GetCartRequest) ProtoMessage()    {}
func (*GetCartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{3}
}

func (m *GetCartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCartRequest.Unmarshal(m, b)
}
func (m *GetCartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCartRequest.Marshal(b, m, deterministic)
}
func (m *GetCartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCartRequest.Merge(m, src)
}
func (m *GetCartRequest) XXX_Size() int {
	return xxx_messageInfo_GetCartRequest.Size(m)
}
func (m *GetCartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCartRequest proto.InternalMessageInfo

func (m *GetCartRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Cart struct {
	UserId               string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RestaurantId         string      `protobuf:"bytes,2,opt,name=restaurant_id,json=restaurantId,proto3" json:"restaurant_id,omitempty"`
	Items                []*CartItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Cart) Reset()         { *m = Cart{} }
func (m *Cart) String() string { return proto.CompactTextString(m) }
func (*Cart) ProtoMessage()    {}
func (*Cart) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{4}
}

func (m *Cart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cart.Unmarshal(m, b)
}
func (m *Cart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cart.Marshal(b, m, deterministic)
}
func (m *Cart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cart.Merge(m, src)
}
func (m *Cart) XXX_Size() int {
	return xxx_messageInfo_Cart.Size(m)
}
func (m *Cart) XXX_DiscardUnknown() {
	xxx_messageInfo_Cart.DiscardUnknown(m)
}

var xxx_messageInfo_Cart proto.InternalMessageInfo

func (m *Cart) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Cart) GetRestaurantId() string {
	if m != nil {
		return m.RestaurantId
	}
	return ""
}

func (m *Cart) GetItems() []*CartItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type MenuItem struct {
	ProductId            string   `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity             int32    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MenuItem) Reset()         { *m = MenuItem{} }
func (m *MenuItem) String() string { return proto.CompactTextString(m) }
func (*MenuItem) ProtoMessage()    {}
func (*MenuItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{6}
}

func (m *MenuItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MenuItem.Unmarshal(m, b)
}
func (m *MenuItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MenuItem.Marshal(b, m, deterministic)
}
func (m *MenuItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MenuItem.Merge(m, src)
}
func (m *MenuItem) XXX_Size() int {
	return xxx_messageInfo_MenuItem.Size(m)
}
func (m *MenuItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MenuItem.DiscardUnknown(m)
}

var xxx_messageInfo_MenuItem proto.InternalMessageInfo

func (m *MenuItem) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *MenuItem) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *MenuItem) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type TransactionInfo struct {
	UserID               string      `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RestaurantID         string      `protobuf:"bytes,2,opt,name=restaurantID,proto3" json:"restaurantID,omitempty"`
	Items                []*MenuItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	CardNumber           string      `protobuf:"bytes,4,opt,name=cardNumber,proto3" json:"cardNumber,omitempty"`
	Cvc                  string      `protobuf:"bytes,5,opt,name=cvc,proto3" json:"cvc,omitempty"`
	CardExpiration       string      `protobuf:"bytes,6,opt,name=cardExpiration,proto3" json:"cardExpiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TransactionInfo) Reset()         { *m = TransactionInfo{} }
func (m *TransactionInfo) String() string { return proto.CompactTextString(m) }
func (*TransactionInfo) ProtoMessage()    {}
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{7}
}

func (m *TransactionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionInfo.Unmarshal(m, b)
}
func (m *TransactionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionInfo.Marshal(b, m, deterministic)
}
func (m *TransactionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionInfo.Merge(m, src)
}
func (m *TransactionInfo) XXX_Size() int {
	return xxx_messageInfo_TransactionInfo.Size(m)
}
func (m *TransactionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionInfo proto.InternalMessageInfo

func (m *TransactionInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *TransactionInfo) GetRestaurantID() string {
	if m != nil {
		return m.RestaurantID
	}
	return ""
}

func (m *TransactionInfo) GetItems() []*MenuItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TransactionInfo) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *TransactionInfo) GetCvc() string {
	if m != nil {
		return m.Cvc
	}
	return ""
}

func (m *TransactionInfo) GetCardExpiration() string {
	if m != nil {
		return m.CardExpiration
	}
	return ""
}

type TransactionOutcome struct {
	IsSuccessful         bool     `protobuf:"varint,1,opt,name=isSuccessful,proto3" json:"isSuccessful,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionOutcome) Reset()         { *m = TransactionOutcome{} }
func (m *TransactionOutcome) String() string { return proto.CompactTextString(m) }
func (*TransactionOutcome) ProtoMessage()    {}
func (*TransactionOutcome) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{8}
}

func (m *TransactionOutcome) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionOutcome.Unmarshal(m, b)
}
func (m *TransactionOutcome) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionOutcome.Marshal(b, m, deterministic)
}
func (m *TransactionOutcome) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionOutcome.Merge(m, src)
}
func (m *TransactionOutcome) XXX_Size() int {
	return xxx_messageInfo_TransactionOutcome.Size(m)
}
func (m *TransactionOutcome) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionOutcome.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionOutcome proto.InternalMessageInfo

func (m *TransactionOutcome) GetIsSuccessful() bool {
	if m != nil {
		return m.IsSuccessful
	}
	return false
}

type RestaurantRequestName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantRequestName) Reset()         { *m = RestaurantRequestName{} }
func (m *RestaurantRequestName) String() string { return proto.CompactTextString(m) }
func (*RestaurantRequestName) ProtoMessage()    {}
func (*RestaurantRequestName) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{9}
}

func (m *RestaurantRequestName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantRequestName.Unmarshal(m, b)
}
func (m *RestaurantRequestName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantRequestName.Marshal(b, m, deterministic)
}
func (m *RestaurantRequestName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantRequestName.Merge(m, src)
}
func (m *RestaurantRequestName) XXX_Size() int {
	return xxx_messageInfo_RestaurantRequestName.Size(m)
}
func (m *RestaurantRequestName) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantRequestName.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantRequestName proto.InternalMessageInfo

func (m *RestaurantRequestName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TAG struct {
	Tag1                 string   `protobuf:"bytes,1,opt,name=tag1,proto3" json:"tag1,omitempty"`
	Tag2                 string   `protobuf:"bytes,2,opt,name=tag2,proto3" json:"tag2,omitempty"`
	Tag3                 string   `protobuf:"bytes,3,opt,name=tag3,proto3" json:"tag3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TAG) Reset()         { *m = TAG{} }
func (m *TAG) String() string { return proto.CompactTextString(m) }
func (*TAG) ProtoMessage()    {}
func (*TAG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{10}
}

func (m *TAG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TAG.Unmarshal(m, b)
}
func (m *TAG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TAG.Marshal(b, m, deterministic)
}
func (m *TAG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TAG.Merge(m, src)
}
func (m *TAG) XXX_Size() int {
	return xxx_messageInfo_TAG.Size(m)
}
func (m *TAG) XXX_DiscardUnknown() {
	xxx_messageInfo_TAG.DiscardUnknown(m)
}

var xxx_messageInfo_TAG proto.InternalMessageInfo

func (m *TAG) GetTag1() string {
	if m != nil {
		return m.Tag1
	}
	return ""
}

func (m *TAG) GetTag2() string {
	if m != nil {
		return m.Tag2
	}
	return ""
}

func (m *TAG) GetTag3() string {
	if m != nil {
		return m.Tag3
	}
	return ""
}

type RestaurantMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	TAG                  *TAG     `protobuf:"bytes,5,opt,name=TAG,proto3" json:"TAG,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantMessage) Reset()         { *m = RestaurantMessage{} }
func (m *RestaurantMessage) String() string { return proto.CompactTextString(m) }
func (*RestaurantMessage) ProtoMessage()    {}
func (*RestaurantMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{11}
}

func (m *RestaurantMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantMessage.Unmarshal(m, b)
}
func (m *RestaurantMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantMessage.Marshal(b, m, deterministic)
}
func (m *RestaurantMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantMessage.Merge(m, src)
}
func (m *RestaurantMessage) XXX_Size() int {
	return xxx_messageInfo_RestaurantMessage.Size(m)
}
func (m *RestaurantMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantMessage proto.InternalMessageInfo

func (m *RestaurantMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RestaurantMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RestaurantMessage) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *RestaurantMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RestaurantMessage) GetTAG() *TAG {
	if m != nil {
		return m.TAG
	}
	return nil
}

type RestaurantMessageMenu struct {
	Type                 string              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	MenuItem             *RestaurantMenuItem `protobuf:"bytes,2,opt,name=menuItem,proto3" json:"menuItem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RestaurantMessageMenu) Reset()         { *m = RestaurantMessageMenu{} }
func (m *RestaurantMessageMenu) String() string { return proto.CompactTextString(m) }
func (*RestaurantMessageMenu) ProtoMessage()    {}
func (*RestaurantMessageMenu) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{12}
}

func (m *RestaurantMessageMenu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantMessageMenu.Unmarshal(m, b)
}
func (m *RestaurantMessageMenu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantMessageMenu.Marshal(b, m, deterministic)
}
func (m *RestaurantMessageMenu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantMessageMenu.Merge(m, src)
}
func (m *RestaurantMessageMenu) XXX_Size() int {
	return xxx_messageInfo_RestaurantMessageMenu.Size(m)
}
func (m *RestaurantMessageMenu) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantMessageMenu.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantMessageMenu proto.InternalMessageInfo

func (m *RestaurantMessageMenu) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RestaurantMessageMenu) GetMenuItem() *RestaurantMenuItem {
	if m != nil {
		return m.MenuItem
	}
	return nil
}

type RestaurantMenuItem struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price                float64  `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantMenuItem) Reset()         { *m = RestaurantMenuItem{} }
func (m *RestaurantMenuItem) String() string { return proto.CompactTextString(m) }
func (*RestaurantMenuItem) ProtoMessage()    {}
func (*RestaurantMenuItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{13}
}

func (m *RestaurantMenuItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantMenuItem.Unmarshal(m, b)
}
func (m *RestaurantMenuItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantMenuItem.Marshal(b, m, deterministic)
}
func (m *RestaurantMenuItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantMenuItem.Merge(m, src)
}
func (m *RestaurantMenuItem) XXX_Size() int {
	return xxx_messageInfo_RestaurantMenuItem.Size(m)
}
func (m *RestaurantMenuItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantMenuItem.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantMenuItem proto.InternalMessageInfo

func (m *RestaurantMenuItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RestaurantMenuItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RestaurantMenuItem) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type RestaurantRequestCity struct {
	City                 string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantRequestCity) Reset()         { *m = RestaurantRequestCity{} }
func (m *RestaurantRequestCity) String() string { return proto.CompactTextString(m) }
func (*RestaurantRequestCity) ProtoMessage()    {}
func (*RestaurantRequestCity) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{14}
}

func (m *RestaurantRequestCity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantRequestCity.Unmarshal(m, b)
}
func (m *RestaurantRequestCity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantRequestCity.Marshal(b, m, deterministic)
}
func (m *RestaurantRequestCity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantRequestCity.Merge(m, src)
}
func (m *RestaurantRequestCity) XXX_Size() int {
	return xxx_messageInfo_RestaurantRequestCity.Size(m)
}
func (m *RestaurantRequestCity) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantRequestCity.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantRequestCity proto.InternalMessageInfo

func (m *RestaurantRequestCity) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

type RestaurantRequestAddress struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantRequestAddress) Reset()         { *m = RestaurantRequestAddress{} }
func (m *RestaurantRequestAddress) String() string { return proto.CompactTextString(m) }
func (*RestaurantRequestAddress) ProtoMessage()    {}
func (*RestaurantRequestAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{15}
}

func (m *RestaurantRequestAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantRequestAddress.Unmarshal(m, b)
}
func (m *RestaurantRequestAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantRequestAddress.Marshal(b, m, deterministic)
}
func (m *RestaurantRequestAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantRequestAddress.Merge(m, src)
}
func (m *RestaurantRequestAddress) XXX_Size() int {
	return xxx_messageInfo_RestaurantRequestAddress.Size(m)
}
func (m *RestaurantRequestAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantRequestAddress.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantRequestAddress proto.InternalMessageInfo

func (m *RestaurantRequestAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type RestaurantRequestTAG struct {
	TAG                  *TAG     `protobuf:"bytes,1,opt,name=TAG,proto3" json:"TAG,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantRequestTAG) Reset()         { *m = RestaurantRequestTAG{} }
func (m *RestaurantRequestTAG) String() string { return proto.CompactTextString(m) }
func (*RestaurantRequestTAG) ProtoMessage()    {}
func (*RestaurantRequestTAG) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{16}
}

func (m *RestaurantRequestTAG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantRequestTAG.Unmarshal(m, b)
}
func (m *RestaurantRequestTAG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantRequestTAG.Marshal(b, m, deterministic)
}
func (m *RestaurantRequestTAG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantRequestTAG.Merge(m, src)
}
func (m *RestaurantRequestTAG) XXX_Size() int {
	return xxx_messageInfo_RestaurantRequestTAG.Size(m)
}
func (m *RestaurantRequestTAG) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantRequestTAG.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantRequestTAG proto.InternalMessageInfo

func (m *RestaurantRequestTAG) GetTAG() *TAG {
	if m != nil {
		return m.TAG
	}
	return nil
}

type RestaurantRequestID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantRequestID) Reset()         { *m = RestaurantRequestID{} }
func (m *RestaurantRequestID) String() string { return proto.CompactTextString(m) }
func (*RestaurantRequestID) ProtoMessage()    {}
func (*RestaurantRequestID) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{17}
}

func (m *RestaurantRequestID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantRequestID.Unmarshal(m, b)
}
func (m *RestaurantRequestID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantRequestID.Marshal(b, m, deterministic)
}
func (m *RestaurantRequestID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantRequestID.Merge(m, src)
}
func (m *RestaurantRequestID) XXX_Size() int {
	return xxx_messageInfo_RestaurantRequestID.Size(m)
}
func (m *RestaurantRequestID) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantRequestID.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantRequestID proto.InternalMessageInfo

func (m *RestaurantRequestID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RestaurantsRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestaurantsRequest) Reset()         { *m = RestaurantsRequest{} }
func (m *RestaurantsRequest) String() string { return proto.CompactTextString(m) }
func (*RestaurantsRequest) ProtoMessage()    {}
func (*RestaurantsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{18}
}

func (m *RestaurantsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestaurantsRequest.Unmarshal(m, b)
}
func (m *RestaurantsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestaurantsRequest.Marshal(b, m, deterministic)
}
func (m *RestaurantsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestaurantsRequest.Merge(m, src)
}
func (m *RestaurantsRequest) XXX_Size() int {
	return xxx_messageInfo_RestaurantsRequest.Size(m)
}
func (m *RestaurantsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestaurantsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestaurantsRequest proto.InternalMessageInfo

func (m *RestaurantsRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddRestaurantRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TAG                  *TAG     `protobuf:"bytes,4,opt,name=TAG,proto3" json:"TAG,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRestaurantRequest) Reset()         { *m = AddRestaurantRequest{} }
func (m *AddRestaurantRequest) String() string { return proto.CompactTextString(m) }
func (*AddRestaurantRequest) ProtoMessage()    {}
func (*AddRestaurantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{19}
}

func (m *AddRestaurantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRestaurantRequest.Unmarshal(m, b)
}
func (m *AddRestaurantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRestaurantRequest.Marshal(b, m, deterministic)
}
func (m *AddRestaurantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRestaurantRequest.Merge(m, src)
}
func (m *AddRestaurantRequest) XXX_Size() int {
	return xxx_messageInfo_AddRestaurantRequest.Size(m)
}
func (m *AddRestaurantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRestaurantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRestaurantRequest proto.InternalMessageInfo

func (m *AddRestaurantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddRestaurantRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *AddRestaurantRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddRestaurantRequest) GetTAG() *TAG {
	if m != nil {
		return m.TAG
	}
	return nil
}

type DeleteRestaurantRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRestaurantRequest) Reset()         { *m = DeleteRestaurantRequest{} }
func (m *DeleteRestaurantRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRestaurantRequest) ProtoMessage()    {}
func (*DeleteRestaurantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{20}
}

func (m *DeleteRestaurantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRestaurantRequest.Unmarshal(m, b)
}
func (m *DeleteRestaurantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRestaurantRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRestaurantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRestaurantRequest.Merge(m, src)
}
func (m *DeleteRestaurantRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRestaurantRequest.Size(m)
}
func (m *DeleteRestaurantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRestaurantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRestaurantRequest proto.InternalMessageInfo

func (m *DeleteRestaurantRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ModifyRestaurantRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	TAG                  *TAG     `protobuf:"bytes,5,opt,name=TAG,proto3" json:"TAG,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModifyRestaurantRequest) Reset()         { *m = ModifyRestaurantRequest{} }
func (m *ModifyRestaurantRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyRestaurantRequest) ProtoMessage()    {}
func (*ModifyRestaurantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{21}
}

func (m *ModifyRestaurantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyRestaurantRequest.Unmarshal(m, b)
}
func (m *ModifyRestaurantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyRestaurantRequest.Marshal(b, m, deterministic)
}
func (m *ModifyRestaurantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyRestaurantRequest.Merge(m, src)
}
func (m *ModifyRestaurantRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyRestaurantRequest.Size(m)
}
func (m *ModifyRestaurantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyRestaurantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyRestaurantRequest proto.InternalMessageInfo

func (m *ModifyRestaurantRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModifyRestaurantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModifyRestaurantRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *ModifyRestaurantRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ModifyRestaurantRequest) GetTAG() *TAG {
	if m != nil {
		return m.TAG
	}
	return nil
}

type CommitOK struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitOK) Reset()         { *m = CommitOK{} }
func (m *CommitOK) String() string { return proto.CompactTextString(m) }
func (*CommitOK) ProtoMessage()    {}
func (*CommitOK) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{22}
}

func (m *CommitOK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitOK.Unmarshal(m, b)
}
func (m *CommitOK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitOK.Marshal(b, m, deterministic)
}
func (m *CommitOK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitOK.Merge(m, src)
}
func (m *CommitOK) XXX_Size() int {
	return xxx_messageInfo_CommitOK.Size(m)
}
func (m *CommitOK) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitOK.DiscardUnknown(m)
}

var xxx_messageInfo_CommitOK proto.InternalMessageInfo

func (m *CommitOK) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type BooleanMessage struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BooleanMessage) Reset()         { *m = BooleanMessage{} }
func (m *BooleanMessage) String() string { return proto.CompactTextString(m) }
func (*BooleanMessage) ProtoMessage()    {}
func (*BooleanMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{23}
}

func (m *BooleanMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooleanMessage.Unmarshal(m, b)
}
func (m *BooleanMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooleanMessage.Marshal(b, m, deterministic)
}
func (m *BooleanMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooleanMessage.Merge(m, src)
}
func (m *BooleanMessage) XXX_Size() int {
	return xxx_messageInfo_BooleanMessage.Size(m)
}
func (m *BooleanMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BooleanMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BooleanMessage proto.InternalMessageInfo

func (m *BooleanMessage) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type IDMessage struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDMessage) Reset()         { *m = IDMessage{} }
func (m *IDMessage) String() string { return proto.CompactTextString(m) }
func (*IDMessage) ProtoMessage()    {}
func (*IDMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{24}
}

func (m *IDMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDMessage.Unmarshal(m, b)
}
func (m *IDMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDMessage.Marshal(b, m, deterministic)
}
func (m *IDMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDMessage.Merge(m, src)
}
func (m *IDMessage) XXX_Size() int {
	return xxx_messageInfo_IDMessage.Size(m)
}
func (m *IDMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_IDMessage.DiscardUnknown(m)
}

var xxx_messageInfo_IDMessage proto.InternalMessageInfo

func (m *IDMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserInfoMessage struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Mail                 string   `protobuf:"bytes,4,opt,name=mail,proto3" json:"mail,omitempty"`
	CreditCardNumber     string   `protobuf:"bytes,5,opt,name=creditCardNumber,proto3" json:"creditCardNumber,omitempty"`
	Deadline             string   `protobuf:"bytes,6,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ThreeDigitCode       string   `protobuf:"bytes,7,opt,name=threeDigitCode,proto3" json:"threeDigitCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoMessage) Reset()         { *m = UserInfoMessage{} }
func (m *UserInfoMessage) String() string { return proto.CompactTextString(m) }
func (*UserInfoMessage) ProtoMessage()    {}
func (*UserInfoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{25}
}

func (m *UserInfoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfoMessage.Unmarshal(m, b)
}
func (m *UserInfoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfoMessage.Marshal(b, m, deterministic)
}
func (m *UserInfoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoMessage.Merge(m, src)
}
func (m *UserInfoMessage) XXX_Size() int {
	return xxx_messageInfo_UserInfoMessage.Size(m)
}
func (m *UserInfoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoMessage proto.InternalMessageInfo

func (m *UserInfoMessage) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserInfoMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserInfoMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserInfoMessage) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

func (m *UserInfoMessage) GetCreditCardNumber() string {
	if m != nil {
		return m.CreditCardNumber
	}
	return ""
}

func (m *UserInfoMessage) GetDeadline() string {
	if m != nil {
		return m.Deadline
	}
	return ""
}

func (m *UserInfoMessage) GetThreeDigitCode() string {
	if m != nil {
		return m.ThreeDigitCode
	}
	return ""
}

type UpdateUsernameMessage struct {
	NewUsername          string   `protobuf:"bytes,1,opt,name=newUsername,proto3" json:"newUsername,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUsernameMessage) Reset()         { *m = UpdateUsernameMessage{} }
func (m *UpdateUsernameMessage) String() string { return proto.CompactTextString(m) }
func (*UpdateUsernameMessage) ProtoMessage()    {}
func (*UpdateUsernameMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{26}
}

func (m *UpdateUsernameMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUsernameMessage.Unmarshal(m, b)
}
func (m *UpdateUsernameMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUsernameMessage.Marshal(b, m, deterministic)
}
func (m *UpdateUsernameMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUsernameMessage.Merge(m, src)
}
func (m *UpdateUsernameMessage) XXX_Size() int {
	return xxx_messageInfo_UpdateUsernameMessage.Size(m)
}
func (m *UpdateUsernameMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUsernameMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUsernameMessage proto.InternalMessageInfo

func (m *UpdateUsernameMessage) GetNewUsername() string {
	if m != nil {
		return m.NewUsername
	}
	return ""
}

func (m *UpdateUsernameMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdatePasswordMessage struct {
	NewPassword          string   `protobuf:"bytes,1,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordMessage) Reset()         { *m = UpdatePasswordMessage{} }
func (m *UpdatePasswordMessage) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordMessage) ProtoMessage()    {}
func (*UpdatePasswordMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{27}
}

func (m *UpdatePasswordMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordMessage.Unmarshal(m, b)
}
func (m *UpdatePasswordMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordMessage.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordMessage.Merge(m, src)
}
func (m *UpdatePasswordMessage) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordMessage.Size(m)
}
func (m *UpdatePasswordMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordMessage proto.InternalMessageInfo

func (m *UpdatePasswordMessage) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *UpdatePasswordMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateAddressMessage struct {
	NewAddress           string   `protobuf:"bytes,1,opt,name=newAddress,proto3" json:"newAddress,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAddressMessage) Reset()         { *m = UpdateAddressMessage{} }
func (m *UpdateAddressMessage) String() string { return proto.CompactTextString(m) }
func (*UpdateAddressMessage) ProtoMessage()    {}
func (*UpdateAddressMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{28}
}

func (m *UpdateAddressMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAddressMessage.Unmarshal(m, b)
}
func (m *UpdateAddressMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAddressMessage.Marshal(b, m, deterministic)
}
func (m *UpdateAddressMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAddressMessage.Merge(m, src)
}
func (m *UpdateAddressMessage) XXX_Size() int {
	return xxx_messageInfo_UpdateAddressMessage.Size(m)
}
func (m *UpdateAddressMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAddressMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAddressMessage proto.InternalMessageInfo

func (m *UpdateAddressMessage) GetNewAddress() string {
	if m != nil {
		return m.NewAddress
	}
	return ""
}

func (m *UpdateAddressMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateMailMessage struct {
	NewMail              string   `protobuf:"bytes,1,opt,name=newMail,proto3" json:"newMail,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateMailMessage) Reset()         { *m = UpdateMailMessage{} }
func (m *UpdateMailMessage) String() string { return proto.CompactTextString(m) }
func (*UpdateMailMessage) ProtoMessage()    {}
func (*UpdateMailMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{29}
}

func (m *UpdateMailMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMailMessage.Unmarshal(m, b)
}
func (m *UpdateMailMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMailMessage.Marshal(b, m, deterministic)
}
func (m *UpdateMailMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMailMessage.Merge(m, src)
}
func (m *UpdateMailMessage) XXX_Size() int {
	return xxx_messageInfo_UpdateMailMessage.Size(m)
}
func (m *UpdateMailMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMailMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMailMessage proto.InternalMessageInfo

func (m *UpdateMailMessage) GetNewMail() string {
	if m != nil {
		return m.NewMail
	}
	return ""
}

func (m *UpdateMailMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdatePaymentMessage struct {
	CreditCard           *CreditCard `protobuf:"bytes,1,opt,name=creditCard,proto3" json:"creditCard,omitempty"`
	Id                   int32       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdatePaymentMessage) Reset()         { *m = UpdatePaymentMessage{} }
func (m *UpdatePaymentMessage) String() string { return proto.CompactTextString(m) }
func (*UpdatePaymentMessage) ProtoMessage()    {}
func (*UpdatePaymentMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{30}
}

func (m *UpdatePaymentMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePaymentMessage.Unmarshal(m, b)
}
func (m *UpdatePaymentMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePaymentMessage.Marshal(b, m, deterministic)
}
func (m *UpdatePaymentMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePaymentMessage.Merge(m, src)
}
func (m *UpdatePaymentMessage) XXX_Size() int {
	return xxx_messageInfo_UpdatePaymentMessage.Size(m)
}
func (m *UpdatePaymentMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePaymentMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePaymentMessage proto.InternalMessageInfo

func (m *UpdatePaymentMessage) GetCreditCard() *CreditCard {
	if m != nil {
		return m.CreditCard
	}
	return nil
}

func (m *UpdatePaymentMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdatePreferitiMessage struct {
	NewPreferito         string   `protobuf:"bytes,1,opt,name=newPreferito,proto3" json:"newPreferito,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePreferitiMessage) Reset()         { *m = UpdatePreferitiMessage{} }
func (m *UpdatePreferitiMessage) String() string { return proto.CompactTextString(m) }
func (*UpdatePreferitiMessage) ProtoMessage()    {}
func (*UpdatePreferitiMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{31}
}

func (m *UpdatePreferitiMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePreferitiMessage.Unmarshal(m, b)
}
func (m *UpdatePreferitiMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePreferitiMessage.Marshal(b, m, deterministic)
}
func (m *UpdatePreferitiMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePreferitiMessage.Merge(m, src)
}
func (m *UpdatePreferitiMessage) XXX_Size() int {
	return xxx_messageInfo_UpdatePreferitiMessage.Size(m)
}
func (m *UpdatePreferitiMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePreferitiMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePreferitiMessage proto.InternalMessageInfo

func (m *UpdatePreferitiMessage) GetNewPreferito() string {
	if m != nil {
		return m.NewPreferito
	}
	return ""
}

func (m *UpdatePreferitiMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PreferitiMessage struct {
	Preferito            string   `protobuf:"bytes,1,opt,name=preferito,proto3" json:"preferito,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreferitiMessage) Reset()         { *m = PreferitiMessage{} }
func (m *PreferitiMessage) String() string { return proto.CompactTextString(m) }
func (*PreferitiMessage) ProtoMessage()    {}
func (*PreferitiMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{32}
}

func (m *PreferitiMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreferitiMessage.Unmarshal(m, b)
}
func (m *PreferitiMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreferitiMessage.Marshal(b, m, deterministic)
}
func (m *PreferitiMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreferitiMessage.Merge(m, src)
}
func (m *PreferitiMessage) XXX_Size() int {
	return xxx_messageInfo_PreferitiMessage.Size(m)
}
func (m *PreferitiMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PreferitiMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PreferitiMessage proto.InternalMessageInfo

func (m *PreferitiMessage) GetPreferito() string {
	if m != nil {
		return m.Preferito
	}
	return ""
}

type UserMessage struct {
	Id                   int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string            `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string            `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Address              string            `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Mail                 string            `protobuf:"bytes,5,opt,name=mail,proto3" json:"mail,omitempty"`
	CreditCard           *CreditCard       `protobuf:"bytes,6,opt,name=creditCard,proto3" json:"creditCard,omitempty"`
	Preferito            *PreferitiMessage `protobuf:"bytes,7,opt,name=preferito,proto3" json:"preferito,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserMessage) Reset()         { *m = UserMessage{} }
func (m *UserMessage) String() string { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()    {}
func (*UserMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{33}
}

func (m *UserMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMessage.Unmarshal(m, b)
}
func (m *UserMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMessage.Marshal(b, m, deterministic)
}
func (m *UserMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessage.Merge(m, src)
}
func (m *UserMessage) XXX_Size() int {
	return xxx_messageInfo_UserMessage.Size(m)
}
func (m *UserMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessage proto.InternalMessageInfo

func (m *UserMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserMessage) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserMessage) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

func (m *UserMessage) GetCreditCard() *CreditCard {
	if m != nil {
		return m.CreditCard
	}
	return nil
}

func (m *UserMessage) GetPreferito() *PreferitiMessage {
	if m != nil {
		return m.Preferito
	}
	return nil
}

type CreditCard struct {
	CreditCardNumber     string   `protobuf:"bytes,1,opt,name=creditCardNumber,proto3" json:"creditCardNumber,omitempty"`
	DeadLine             string   `protobuf:"bytes,2,opt,name=deadLine,proto3" json:"deadLine,omitempty"`
	ThreeDigitCode       string   `protobuf:"bytes,3,opt,name=threeDigitCode,proto3" json:"threeDigitCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditCard) Reset()         { *m = CreditCard{} }
func (m *CreditCard) String() string { return proto.CompactTextString(m) }
func (*CreditCard) ProtoMessage()    {}
func (*CreditCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{34}
}

func (m *CreditCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditCard.Unmarshal(m, b)
}
func (m *CreditCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditCard.Marshal(b, m, deterministic)
}
func (m *CreditCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditCard.Merge(m, src)
}
func (m *CreditCard) XXX_Size() int {
	return xxx_messageInfo_CreditCard.Size(m)
}
func (m *CreditCard) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditCard.DiscardUnknown(m)
}

var xxx_messageInfo_CreditCard proto.InternalMessageInfo

func (m *CreditCard) GetCreditCardNumber() string {
	if m != nil {
		return m.CreditCardNumber
	}
	return ""
}

func (m *CreditCard) GetDeadLine() string {
	if m != nil {
		return m.DeadLine
	}
	return ""
}

func (m *CreditCard) GetThreeDigitCode() string {
	if m != nil {
		return m.ThreeDigitCode
	}
	return ""
}

type TagMessage struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagMessage) Reset()         { *m = TagMessage{} }
func (m *TagMessage) String() string { return proto.CompactTextString(m) }
func (*TagMessage) ProtoMessage()    {}
func (*TagMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{35}
}

func (m *TagMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagMessage.Unmarshal(m, b)
}
func (m *TagMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagMessage.Marshal(b, m, deterministic)
}
func (m *TagMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagMessage.Merge(m, src)
}
func (m *TagMessage) XXX_Size() int {
	return xxx_messageInfo_TagMessage.Size(m)
}
func (m *TagMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TagMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TagMessage proto.InternalMessageInfo

func (m *TagMessage) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type GetRecommendationsRequest struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecommendationsRequest) Reset()         { *m = GetRecommendationsRequest{} }
func (m *GetRecommendationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecommendationsRequest) ProtoMessage()    {}
func (*GetRecommendationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{36}
}

func (m *GetRecommendationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecommendationsRequest.Unmarshal(m, b)
}
func (m *GetRecommendationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecommendationsRequest.Marshal(b, m, deterministic)
}
func (m *GetRecommendationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecommendationsRequest.Merge(m, src)
}
func (m *GetRecommendationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecommendationsRequest.Size(m)
}
func (m *GetRecommendationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecommendationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecommendationsRequest proto.InternalMessageInfo

func (m *GetRecommendationsRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetRecommendationsResponse struct {
	RecommendationList   []string `protobuf:"bytes,1,rep,name=recommendationList,proto3" json:"recommendationList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecommendationsResponse) Reset()         { *m = GetRecommendationsResponse{} }
func (m *GetRecommendationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecommendationsResponse) ProtoMessage()    {}
func (*GetRecommendationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{37}
}

func (m *GetRecommendationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecommendationsResponse.Unmarshal(m, b)
}
func (m *GetRecommendationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecommendationsResponse.Marshal(b, m, deterministic)
}
func (m *GetRecommendationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecommendationsResponse.Merge(m, src)
}
func (m *GetRecommendationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecommendationsResponse.Size(m)
}
func (m *GetRecommendationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecommendationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecommendationsResponse proto.InternalMessageInfo

func (m *GetRecommendationsResponse) GetRecommendationList() []string {
	if m != nil {
		return m.RecommendationList
	}
	return nil
}

func init() {
	proto.RegisterType((*CartItem)(nil), "sdccFoodDelivery.CartItem")
	proto.RegisterType((*AddItemRequest)(nil), "sdccFoodDelivery.AddItemRequest")
	proto.RegisterType((*EmptyCartRequest)(nil), "sdccFoodDelivery.EmptyCartRequest")
	proto.RegisterType((*GetCartRequest)(nil), "sdccFoodDelivery.GetCartRequest")
	proto.RegisterType((*Cart)(nil), "sdccFoodDelivery.Cart")
	proto.RegisterType((*Empty)(nil), "sdccFoodDelivery.Empty")
	proto.RegisterType((*MenuItem)(nil), "sdccFoodDelivery.MenuItem")
	proto.RegisterType((*TransactionInfo)(nil), "sdccFoodDelivery.TransactionInfo")
	proto.RegisterType((*TransactionOutcome)(nil), "sdccFoodDelivery.TransactionOutcome")
	proto.RegisterType((*RestaurantRequestName)(nil), "sdccFoodDelivery.RestaurantRequestName")
	proto.RegisterType((*TAG)(nil), "sdccFoodDelivery.TAG")
	proto.RegisterType((*RestaurantMessage)(nil), "sdccFoodDelivery.RestaurantMessage")
	proto.RegisterType((*RestaurantMessageMenu)(nil), "sdccFoodDelivery.RestaurantMessageMenu")
	proto.RegisterType((*RestaurantMenuItem)(nil), "sdccFoodDelivery.RestaurantMenuItem")
	proto.RegisterType((*RestaurantRequestCity)(nil), "sdccFoodDelivery.RestaurantRequestCity")
	proto.RegisterType((*RestaurantRequestAddress)(nil), "sdccFoodDelivery.RestaurantRequestAddress")
	proto.RegisterType((*RestaurantRequestTAG)(nil), "sdccFoodDelivery.RestaurantRequestTAG")
	proto.RegisterType((*RestaurantRequestID)(nil), "sdccFoodDelivery.RestaurantRequestID")
	proto.RegisterType((*RestaurantsRequest)(nil), "sdccFoodDelivery.RestaurantsRequest")
	proto.RegisterType((*AddRestaurantRequest)(nil), "sdccFoodDelivery.AddRestaurantRequest")
	proto.RegisterType((*DeleteRestaurantRequest)(nil), "sdccFoodDelivery.DeleteRestaurantRequest")
	proto.RegisterType((*ModifyRestaurantRequest)(nil), "sdccFoodDelivery.ModifyRestaurantRequest")
	proto.RegisterType((*CommitOK)(nil), "sdccFoodDelivery.CommitOK")
	proto.RegisterType((*BooleanMessage)(nil), "sdccFoodDelivery.BooleanMessage")
	proto.RegisterType((*IDMessage)(nil), "sdccFoodDelivery.IDMessage")
	proto.RegisterType((*UserInfoMessage)(nil), "sdccFoodDelivery.UserInfoMessage")
	proto.RegisterType((*UpdateUsernameMessage)(nil), "sdccFoodDelivery.UpdateUsernameMessage")
	proto.RegisterType((*UpdatePasswordMessage)(nil), "sdccFoodDelivery.UpdatePasswordMessage")
	proto.RegisterType((*UpdateAddressMessage)(nil), "sdccFoodDelivery.UpdateAddressMessage")
	proto.RegisterType((*UpdateMailMessage)(nil), "sdccFoodDelivery.UpdateMailMessage")
	proto.RegisterType((*UpdatePaymentMessage)(nil), "sdccFoodDelivery.UpdatePaymentMessage")
	proto.RegisterType((*UpdatePreferitiMessage)(nil), "sdccFoodDelivery.UpdatePreferitiMessage")
	proto.RegisterType((*PreferitiMessage)(nil), "sdccFoodDelivery.PreferitiMessage")
	proto.RegisterType((*UserMessage)(nil), "sdccFoodDelivery.UserMessage")
	proto.RegisterType((*CreditCard)(nil), "sdccFoodDelivery.CreditCard")
	proto.RegisterType((*TagMessage)(nil), "sdccFoodDelivery.TagMessage")
	proto.RegisterType((*GetRecommendationsRequest)(nil), "sdccFoodDelivery.getRecommendationsRequest")
	proto.RegisterType((*GetRecommendationsResponse)(nil), "sdccFoodDelivery.getRecommendationsResponse")
}

func init() {
	proto.RegisterFile("proto.proto", fileDescriptor_2fcc84b9998d60d8)
}

var fileDescriptor_2fcc84b9998d60d8 = []byte{
	// 1586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x8e, 0x6c, 0x27, 0x76, 0x8e, 0xdb, 0xc4, 0x61, 0xf3, 0xe3, 0xb9, 0x3f, 0xf0, 0xd8, 0xbf,
	0xb4, 0x1d, 0x82, 0xce, 0xd9, 0xc5, 0x2e, 0x36, 0xac, 0x4e, 0xdc, 0x66, 0x5e, 0x93, 0xb6, 0x70,
	0x93, 0xab, 0x62, 0xc8, 0x54, 0x91, 0x76, 0x85, 0x58, 0x92, 0x23, 0x51, 0x49, 0x0d, 0x0c, 0x03,
	0x86, 0xdd, 0xed, 0xa2, 0xd8, 0xc5, 0x9e, 0x63, 0xef, 0xb3, 0x27, 0x18, 0xf6, 0x16, 0x03, 0x29,
	0xea, 0xcf, 0xa2, 0x6d, 0x0d, 0xc5, 0x76, 0x13, 0x90, 0x87, 0xe4, 0x77, 0x78, 0xbe, 0x73, 0x78,
	0xfc, 0x29, 0x50, 0x1d, 0xb9, 0x0e, 0x73, 0x76, 0xc4, 0x5f, 0x54, 0xf3, 0x88, 0x61, 0x3c, 0x73,
	0x1c, 0xd2, 0xa1, 0x43, 0xf3, 0x82, 0xba, 0x63, 0xfc, 0x06, 0x2a, 0xfb, 0xba, 0xcb, 0xba, 0x8c,
	0x5a, 0xe8, 0x26, 0xc0, 0xc8, 0x75, 0x88, 0x6f, 0xb0, 0x53, 0x93, 0xd4, 0xb5, 0xa6, 0xb6, 0xbd,
	0xdc, 0x5b, 0x96, 0x96, 0x2e, 0x41, 0x0d, 0xa8, 0x9c, 0xfb, 0xba, 0xcd, 0x4c, 0x36, 0xae, 0x17,
	0x9a, 0xda, 0xf6, 0x62, 0x2f, 0x9a, 0xa3, 0x75, 0x58, 0x1c, 0xb9, 0xa6, 0x41, 0xeb, 0xc5, 0xa6,
	0xb6, 0x5d, 0xe8, 0x05, 0x13, 0xfc, 0x13, 0xac, 0xb4, 0x09, 0xe1, 0xd8, 0x3d, 0x7a, 0xee, 0x53,
	0x8f, 0xa1, 0x2d, 0x28, 0xfb, 0x1e, 0x75, 0x63, 0xfc, 0x25, 0x3e, 0xed, 0x12, 0x74, 0x1b, 0xae,
	0xba, 0xd4, 0x63, 0xba, 0xef, 0xea, 0xb6, 0x70, 0x5f, 0x10, 0xcb, 0x57, 0x62, 0x63, 0x97, 0xa0,
	0x1d, 0x28, 0x99, 0x8c, 0x5a, 0xc2, 0x49, 0xb5, 0xd5, 0xd8, 0x99, 0x8c, 0x66, 0x27, 0x0c, 0xa5,
	0x27, 0xf6, 0xe1, 0x47, 0x50, 0x7b, 0x6a, 0x8d, 0xd8, 0x98, 0x9b, 0xe7, 0xdd, 0x00, 0x3f, 0x80,
	0x95, 0x03, 0xca, 0x72, 0x6d, 0xbd, 0x80, 0x12, 0xdf, 0xf7, 0x91, 0xd1, 0x3c, 0x86, 0x45, 0x7e,
	0x4b, 0xaf, 0x5e, 0x6c, 0x16, 0xe7, 0x84, 0x13, 0x6c, 0xc4, 0x65, 0x58, 0x14, 0xf1, 0xf0, 0xac,
	0x1d, 0x51, 0xdb, 0xff, 0x6f, 0xb2, 0xf6, 0xa7, 0x06, 0xab, 0xc7, 0xae, 0x6e, 0x7b, 0xba, 0xc1,
	0x4c, 0xc7, 0xee, 0xda, 0x7d, 0x07, 0x6d, 0x42, 0x10, 0x5a, 0x27, 0x15, 0x68, 0x07, 0x61, 0x48,
	0xc6, 0xd4, 0x51, 0xc4, 0xd9, 0xc9, 0x11, 0x67, 0x18, 0x8b, 0x8c, 0x13, 0xdd, 0x02, 0x30, 0x74,
	0x97, 0xbc, 0xf0, 0xad, 0xb7, 0xd4, 0xad, 0x97, 0x04, 0x66, 0xc2, 0x82, 0x6a, 0x50, 0x34, 0x2e,
	0x8c, 0xfa, 0xa2, 0x58, 0xe0, 0x43, 0x74, 0x0f, 0x56, 0xf8, 0xfa, 0xd3, 0xf7, 0x23, 0xd3, 0xd5,
	0xf9, 0xad, 0xeb, 0x4b, 0x62, 0x71, 0xc2, 0x8a, 0xbf, 0x04, 0x94, 0x08, 0xed, 0xa5, 0xcf, 0x0c,
	0xc7, 0xa2, 0x3c, 0x0a, 0xd3, 0x7b, 0xed, 0x1b, 0x06, 0xf5, 0xbc, 0xbe, 0x3f, 0x14, 0x31, 0x56,
	0x7a, 0x29, 0x1b, 0x7e, 0x04, 0x1b, 0xbd, 0x28, 0x2a, 0x59, 0x21, 0x2f, 0x74, 0x8b, 0x22, 0x04,
	0x25, 0x5b, 0xb7, 0xa8, 0x24, 0x46, 0x8c, 0x71, 0x1b, 0x8a, 0xc7, 0xed, 0x03, 0xbe, 0xc4, 0xf4,
	0xc1, 0xe7, 0xe1, 0x12, 0x1f, 0x4b, 0x5b, 0x4b, 0x32, 0x25, 0xc6, 0xd2, 0xb6, 0x2b, 0xd2, 0x10,
	0xd8, 0x76, 0xf1, 0x07, 0x0d, 0xd6, 0x62, 0x87, 0x47, 0xd4, 0xf3, 0xf4, 0x01, 0x45, 0x2b, 0x50,
	0x88, 0x92, 0x5c, 0x30, 0x49, 0xe4, 0xbc, 0x10, 0x3b, 0xe7, 0x36, 0x83, 0x67, 0x5b, 0xa2, 0xf1,
	0x31, 0xaa, 0x43, 0x59, 0x27, 0xc4, 0xa5, 0x9e, 0x27, 0xe9, 0x0c, 0xa7, 0xe8, 0xbe, 0xb8, 0xaa,
	0xe0, 0xb2, 0xda, 0xda, 0xc8, 0xe6, 0xe6, 0xb8, 0x7d, 0xd0, 0xe3, 0x3b, 0xb0, 0x95, 0x24, 0x40,
	0xde, 0x87, 0x27, 0x4e, 0xdc, 0x7e, 0x3c, 0x8a, 0x08, 0xe0, 0x63, 0xf4, 0x04, 0x2a, 0x96, 0x4c,
	0xaa, 0xb8, 0x5b, 0xb5, 0x75, 0x27, 0x0b, 0x9d, 0x84, 0x93, 0x05, 0x10, 0x9d, 0xc2, 0x3f, 0x00,
	0xca, 0xae, 0xab, 0xc8, 0x46, 0x4d, 0xa8, 0x12, 0xea, 0x19, 0xae, 0x39, 0x12, 0x89, 0x0f, 0xa8,
	0x48, 0x9a, 0xd2, 0x75, 0xae, 0x85, 0x75, 0xae, 0xca, 0xe8, 0x3e, 0x27, 0x2b, 0x24, 0x50, 0x8b,
	0x09, 0xc4, 0x5f, 0x40, 0x3d, 0xb3, 0xb9, 0x2d, 0x29, 0x4c, 0x90, 0xab, 0xa5, 0xc8, 0xc5, 0xdf,
	0xc0, 0x7a, 0xe6, 0x14, 0x2f, 0x0c, 0x49, 0xba, 0x36, 0x97, 0xf4, 0xbb, 0x70, 0x2d, 0x03, 0xd0,
	0xed, 0x4c, 0x96, 0x01, 0xde, 0x49, 0x92, 0xe5, 0x85, 0xfd, 0xab, 0x0e, 0x65, 0x2b, 0xc8, 0x53,
	0x78, 0x2f, 0x39, 0xc5, 0x3f, 0x6b, 0xb0, 0xde, 0x26, 0x24, 0x03, 0xad, 0xe4, 0x37, 0xa4, 0xa3,
	0xa0, 0xae, 0xa7, 0xa2, 0xb2, 0x9e, 0x4a, 0x73, 0x43, 0x7b, 0x00, 0x5b, 0x1d, 0x3a, 0xa4, 0x8c,
	0x66, 0x6f, 0x31, 0x19, 0xde, 0xef, 0x1a, 0x6c, 0x1d, 0x39, 0xc4, 0xec, 0x8f, 0xe7, 0xee, 0xfd,
	0x3f, 0x5f, 0x44, 0x03, 0x2a, 0xfb, 0x8e, 0x65, 0x99, 0xec, 0xe5, 0x73, 0x7e, 0x0d, 0xe7, 0x4c,
	0x36, 0x8e, 0x82, 0x73, 0x86, 0x9b, 0xb0, 0xb2, 0xe7, 0x38, 0x43, 0xaa, 0xdb, 0x89, 0xa7, 0x9b,
	0xda, 0x71, 0x1d, 0x96, 0xbb, 0x9d, 0xec, 0xbb, 0x5e, 0x14, 0x11, 0xff, 0xa5, 0xc1, 0xea, 0x09,
	0x6f, 0xb1, 0x76, 0xdf, 0x09, 0xf7, 0x34, 0xa0, 0xc2, 0xbb, 0x6e, 0x22, 0x3f, 0xd1, 0x9c, 0xaf,
	0x8d, 0x74, 0xcf, 0xbb, 0x74, 0xdc, 0xf0, 0xb7, 0x26, 0x9a, 0xcf, 0xc8, 0x15, 0x82, 0x92, 0xa5,
	0x9b, 0x43, 0x49, 0x80, 0x18, 0xa3, 0x87, 0x50, 0x33, 0x5c, 0x4a, 0x4c, 0xfe, 0x4b, 0x18, 0x76,
	0xe0, 0xa0, 0xd1, 0x66, 0xec, 0xdc, 0x2b, 0xa1, 0x3a, 0x19, 0x9a, 0x36, 0x95, 0xfd, 0x36, 0x9a,
	0xf3, 0x8e, 0xcc, 0xde, 0xb9, 0x94, 0x76, 0xcc, 0x81, 0xc9, 0xf6, 0x1d, 0x42, 0xeb, 0xe5, 0xa0,
	0x23, 0xa7, 0xad, 0xb8, 0x0b, 0x1b, 0x27, 0x23, 0xa2, 0x33, 0x7a, 0x22, 0x63, 0x09, 0xc3, 0x6d,
	0x42, 0xd5, 0xa6, 0x97, 0x27, 0xe9, 0x88, 0x93, 0x26, 0x49, 0x5a, 0x21, 0x22, 0x2d, 0x82, 0x7a,
	0x25, 0x43, 0x4f, 0x43, 0x85, 0xd6, 0x04, 0x54, 0x68, 0xca, 0x40, 0x3d, 0x83, 0xf5, 0x00, 0x4a,
	0xbe, 0xf1, 0x10, 0xe9, 0x16, 0x80, 0x4d, 0x2f, 0xdb, 0xa9, 0xd7, 0x9e, 0xb0, 0x64, 0x70, 0xbe,
	0x86, 0xb5, 0x00, 0xe7, 0x48, 0x37, 0x87, 0x21, 0x48, 0x1d, 0xca, 0x36, 0xbd, 0xe4, 0x96, 0xf0,
	0x5d, 0xca, 0x69, 0xe6, 0x38, 0x09, 0xaf, 0xf1, 0x4a, 0x1f, 0x5b, 0x34, 0xfe, 0x19, 0xf8, 0x0a,
	0x20, 0x4e, 0x86, 0x6c, 0x23, 0x37, 0x14, 0xfa, 0x21, 0xda, 0xd3, 0x4b, 0xec, 0xcf, 0x78, 0x39,
	0x84, 0x4d, 0xe9, 0xc5, 0xa5, 0x7d, 0xea, 0x9a, 0xcc, 0x0c, 0xfd, 0x60, 0xb8, 0xc2, 0x59, 0x92,
	0x66, 0x47, 0x5e, 0x37, 0x65, 0xcb, 0xa0, 0x3d, 0x86, 0x5a, 0x06, 0xe7, 0x06, 0x2c, 0x8f, 0x26,
	0x40, 0x62, 0x03, 0xfe, 0xa5, 0x00, 0x55, 0x9e, 0xd4, 0x29, 0x8f, 0x21, 0x55, 0xf8, 0x85, 0x19,
	0x85, 0x5f, 0x9c, 0x5e, 0xf8, 0x25, 0x75, 0xe1, 0x2f, 0x26, 0x0a, 0x3f, 0xcd, 0xe9, 0xd2, 0xbf,
	0xe4, 0xf4, 0x49, 0x32, 0xc2, 0xb2, 0x38, 0x8c, 0xb3, 0x87, 0x27, 0x89, 0x49, 0xb2, 0xf0, 0x23,
	0x40, 0x8c, 0xad, 0x7c, 0x86, 0xda, 0xec, 0x67, 0x78, 0xc8, 0x9f, 0x61, 0x21, 0x7e, 0x86, 0x87,
	0xea, 0x67, 0x58, 0x54, 0x3e, 0xc3, 0x5b, 0x00, 0xc7, 0xfa, 0x20, 0xcc, 0x40, 0x0d, 0x8a, 0x4c,
	0x1f, 0x48, 0x87, 0x7c, 0x88, 0x77, 0xe1, 0x93, 0x01, 0x65, 0x3d, 0x6a, 0x38, 0x96, 0x45, 0x6d,
	0x22, 0xd4, 0x54, 0xf4, 0x43, 0x33, 0x45, 0x1d, 0xe2, 0x43, 0x68, 0xa8, 0x0e, 0x79, 0x23, 0xc7,
	0xf6, 0x28, 0xda, 0x01, 0xe4, 0xa6, 0x96, 0x0e, 0x4d, 0x8f, 0xd5, 0xb5, 0x66, 0x71, 0x7b, 0xb9,
	0xa7, 0x58, 0x69, 0xfd, 0xad, 0xc1, 0x95, 0x97, 0x2e, 0xa1, 0xee, 0x6b, 0xea, 0x5e, 0x98, 0x06,
	0x45, 0xcf, 0xa0, 0x2c, 0x3f, 0x2f, 0x50, 0x33, 0xcb, 0x75, 0xfa, 0xcb, 0xa3, 0xb1, 0x95, 0xdd,
	0x11, 0x68, 0xe9, 0x05, 0xf4, 0x14, 0xca, 0x52, 0xf9, 0xab, 0x70, 0xd2, 0x1f, 0x05, 0x8d, 0x4d,
	0xb5, 0x4c, 0xc7, 0x0b, 0xe8, 0x3b, 0x58, 0x8e, 0xbe, 0x36, 0x10, 0x9e, 0xe2, 0x2e, 0x09, 0x35,
	0xfd, 0x4a, 0x2d, 0x17, 0x56, 0x8d, 0x77, 0xd4, 0x38, 0x73, 0x7c, 0x16, 0x46, 0x7b, 0x0a, 0x88,
	0xbe, 0xa7, 0x86, 0xcf, 0x68, 0x42, 0xc1, 0xa2, 0x4f, 0x15, 0xbf, 0x4f, 0x69, 0xed, 0xde, 0xb8,
	0x33, 0x73, 0x8b, 0xd4, 0xc0, 0x78, 0xa1, 0xf5, 0x5b, 0x05, 0xd6, 0x62, 0xe1, 0x1e, 0xba, 0x3d,
	0x83, 0x2d, 0x91, 0xc3, 0x48, 0xd0, 0xdb, 0x7d, 0x67, 0x6f, 0x2c, 0x94, 0xef, 0xfd, 0x59, 0x92,
	0x2e, 0x21, 0x91, 0x1b, 0xb7, 0x67, 0x6b, 0xbf, 0x40, 0x93, 0x2c, 0x3c, 0xd6, 0xd0, 0xb9, 0x2c,
	0x98, 0xb4, 0xb3, 0xb0, 0xb9, 0x3e, 0xcc, 0xe1, 0x4f, 0xee, 0xcd, 0xef, 0x52, 0x1d, 0x9f, 0xd0,
	0x81, 0x79, 0xe2, 0xe3, 0x1b, 0xf3, 0x3b, 0x33, 0x61, 0x53, 0xe1, 0x8c, 0x2b, 0xc2, 0x7b, 0x39,
	0x7c, 0x1d, 0xb7, 0x0f, 0xf2, 0xbb, 0x1a, 0xc0, 0x5a, 0xca, 0x95, 0x90, 0xea, 0x77, 0x73, 0x78,
	0xe9, 0x76, 0x1a, 0xf7, 0x73, 0x38, 0xe1, 0x78, 0xc2, 0xd1, 0x5b, 0xe1, 0xa8, 0x3d, 0x1c, 0x26,
	0x14, 0x28, 0x9a, 0xa9, 0xf6, 0xc3, 0xbe, 0x91, 0x3f, 0x18, 0x0a, 0x1b, 0x0a, 0xde, 0xba, 0x24,
	0x6f, 0x40, 0xf9, 0x1c, 0xa1, 0x37, 0x50, 0x23, 0x13, 0x92, 0x14, 0x3d, 0xc8, 0x1e, 0x9d, 0x22,
	0x5b, 0x1b, 0xaa, 0x2f, 0x78, 0xa9, 0x0f, 0x03, 0x70, 0x6b, 0x42, 0xc3, 0xaa, 0xc0, 0xa7, 0xe8,
	0xdc, 0x39, 0xe0, 0x27, 0x70, 0x55, 0x4f, 0xea, 0x79, 0x55, 0x3d, 0xa9, 0x04, 0xff, 0x6c, 0xd8,
	0xd6, 0x87, 0x32, 0xac, 0xf1, 0xf5, 0x53, 0xf1, 0x6f, 0x0e, 0x4f, 0xb6, 0x84, 0x23, 0x28, 0x79,
	0xfa, 0x05, 0x55, 0xf5, 0x9e, 0x09, 0xcd, 0xda, 0x50, 0xf4, 0xd3, 0xb4, 0x2c, 0xc6, 0x0b, 0xe8,
	0x08, 0x20, 0x60, 0x7d, 0x6f, 0xdc, 0xed, 0xa0, 0xeb, 0xd9, 0x13, 0x91, 0x4c, 0xce, 0x05, 0xf7,
	0x2d, 0x54, 0xfa, 0xa6, 0x4d, 0xe6, 0x83, 0xdd, 0x54, 0x5f, 0x3f, 0x46, 0xfa, 0x1e, 0x56, 0xfc,
	0x94, 0x34, 0x55, 0x75, 0x04, 0xa5, 0x78, 0xcd, 0x75, 0xd1, 0x08, 0x3e, 0x52, 0xa1, 0x53, 0xe1,
	0x27, 0x04, 0x6d, 0x2e, 0xf8, 0x37, 0x70, 0xd5, 0x4f, 0x4a, 0x58, 0x55, 0x49, 0xa8, 0x34, 0x6e,
	0x2e, 0xf0, 0x13, 0x00, 0x3f, 0xd2, 0xb5, 0xe8, 0xf6, 0x34, 0xe4, 0x84, 0xea, 0xcd, 0x05, 0xab,
	0xc3, 0x35, 0x3f, 0xad, 0x77, 0xd9, 0x3b, 0x87, 0x4c, 0xbf, 0x79, 0x5a, 0x16, 0xe7, 0x72, 0x71,
	0x0a, 0xab, 0x7e, 0x5a, 0xec, 0xa2, 0xed, 0xa9, 0xf0, 0x13, 0x72, 0x2d, 0x27, 0xef, 0xeb, 0x03,
	0xca, 0x78, 0x41, 0x44, 0xc7, 0xe7, 0xd7, 0x62, 0x0e, 0xad, 0xc8, 0x1b, 0x61, 0xeb, 0x0f, 0x4d,
	0x3e, 0x48, 0x2e, 0x59, 0xa3, 0x07, 0xf9, 0x1c, 0xaa, 0xd2, 0xa5, 0x48, 0xc7, 0xc7, 0x55, 0xfd,
	0x21, 0x54, 0x3c, 0x6a, 0x13, 0x81, 0xa4, 0xd0, 0xbf, 0xb1, 0x4a, 0xcc, 0xc3, 0x46, 0xeb, 0x57,
	0x0d, 0x36, 0xd2, 0x5a, 0x2e, 0x14, 0x16, 0xe7, 0x80, 0xb2, 0xe2, 0x10, 0x3d, 0xca, 0x62, 0x4e,
	0xd5, 0x9d, 0x8d, 0xcf, 0xf2, 0x6d, 0x0e, 0xf4, 0x26, 0x5e, 0xd8, 0x2b, 0xbc, 0xd2, 0xde, 0x2e,
	0x89, 0xff, 0x84, 0xef, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xe5, 0x71, 0xb3, 0x18, 0x17,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*Empty, error)
	GetCart(ctx context.Context, in *GetCartRequest, opts ...grpc.CallOption) (*Cart, error)
	EmptyCart(ctx context.Context, in *EmptyCartRequest, opts ...grpc.CallOption) (*Empty, error)
}

type orderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderServiceClient(cc grpc.ClientConnInterface) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) AddItem(ctx context.Context, in *AddItemRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.OrderService/AddItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetCart(ctx context.Context, in *GetCartRequest, opts ...grpc.CallOption) (*Cart, error) {
	out := new(Cart)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.OrderService/GetCart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) EmptyCart(ctx context.Context, in *EmptyCartRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.OrderService/EmptyCart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	AddItem(context.Context, *AddItemRequest) (*Empty, error)
	GetCart(context.Context, *GetCartRequest) (*Cart, error)
	EmptyCart(context.Context, *EmptyCartRequest) (*Empty, error)
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) AddItem(ctx context.Context, req *AddItemRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddItem not implemented")
}
func (*UnimplementedOrderServiceServer) GetCart(ctx context.Context, req *GetCartRequest) (*Cart, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCart not implemented")
}
func (*UnimplementedOrderServiceServer) EmptyCart(ctx context.Context, req *EmptyCartRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmptyCart not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_AddItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).AddItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.OrderService/AddItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).AddItem(ctx, req.(*AddItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.OrderService/GetCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetCart(ctx, req.(*GetCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_EmptyCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).EmptyCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.OrderService/EmptyCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).EmptyCart(ctx, req.(*EmptyCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sdccFoodDelivery.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddItem",
			Handler:    _OrderService_AddItem_Handler,
		},
		{
			MethodName: "GetCart",
			Handler:    _OrderService_GetCart_Handler,
		},
		{
			MethodName: "EmptyCart",
			Handler:    _OrderService_EmptyCart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

// CheckoutServiceClient is the client API for CheckoutService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckoutServiceClient interface {
	//ask for a name restaurants infos
	ExecuteTransaction(ctx context.Context, in *TransactionInfo, opts ...grpc.CallOption) (*TransactionOutcome, error)
}

type checkoutServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCheckoutServiceClient(cc grpc.ClientConnInterface) CheckoutServiceClient {
	return &checkoutServiceClient{cc}
}

func (c *checkoutServiceClient) ExecuteTransaction(ctx context.Context, in *TransactionInfo, opts ...grpc.CallOption) (*TransactionOutcome, error) {
	out := new(TransactionOutcome)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.checkoutService/executeTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckoutServiceServer is the server API for CheckoutService service.
type CheckoutServiceServer interface {
	//ask for a name restaurants infos
	ExecuteTransaction(context.Context, *TransactionInfo) (*TransactionOutcome, error)
}

// UnimplementedCheckoutServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCheckoutServiceServer struct {
}

func (*UnimplementedCheckoutServiceServer) ExecuteTransaction(ctx context.Context, req *TransactionInfo) (*TransactionOutcome, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteTransaction not implemented")
}

func RegisterCheckoutServiceServer(s *grpc.Server, srv CheckoutServiceServer) {
	s.RegisterService(&_CheckoutService_serviceDesc, srv)
}

func _CheckoutService_ExecuteTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutServiceServer).ExecuteTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.checkoutService/ExecuteTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutServiceServer).ExecuteTransaction(ctx, req.(*TransactionInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _CheckoutService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sdccFoodDelivery.checkoutService",
	HandlerType: (*CheckoutServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "executeTransaction",
			Handler:    _CheckoutService_ExecuteTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

// RestaurantServiceClient is the client API for RestaurantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RestaurantServiceClient interface {
	//ask for a name restaurants infos
	GetRestaurantInfoByName(ctx context.Context, in *RestaurantRequestName, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByNameClient, error)
	GetRestaurantInfoByAddress(ctx context.Context, in *RestaurantRequestAddress, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByAddressClient, error)
	GetRestaurantInfoByCity(ctx context.Context, in *RestaurantRequestCity, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByCityClient, error)
	GetRestaurantInfoByTAG(ctx context.Context, in *RestaurantRequestTAG, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByTAGClient, error)
	GetRestaurantMenu(ctx context.Context, in *RestaurantRequestID, opts ...grpc.CallOption) (RestaurantService_GetRestaurantMenuClient, error)
	GetAllRestaurants(ctx context.Context, in *RestaurantsRequest, opts ...grpc.CallOption) (RestaurantService_GetAllRestaurantsClient, error)
	GetRestaurantInfoById(ctx context.Context, in *RestaurantRequestID, opts ...grpc.CallOption) (*RestaurantMessage, error)
	//delete restaurant by id
	DeleteRestaurant(ctx context.Context, in *DeleteRestaurantRequest, opts ...grpc.CallOption) (*CommitOK, error)
	//modify restaurant by ID
	ModifyRestaurant(ctx context.Context, in *ModifyRestaurantRequest, opts ...grpc.CallOption) (*CommitOK, error)
	//add new restaurant
	AddRestaurant(ctx context.Context, in *AddRestaurantRequest, opts ...grpc.CallOption) (*CommitOK, error)
}

type restaurantServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRestaurantServiceClient(cc grpc.ClientConnInterface) RestaurantServiceClient {
	return &restaurantServiceClient{cc}
}

func (c *restaurantServiceClient) GetRestaurantInfoByName(ctx context.Context, in *RestaurantRequestName, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByNameClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RestaurantService_serviceDesc.Streams[0], "/sdccFoodDelivery.restaurantService/getRestaurantInfoByName", opts...)
	if err != nil {
		return nil, err
	}
	x := &restaurantServiceGetRestaurantInfoByNameClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RestaurantService_GetRestaurantInfoByNameClient interface {
	Recv() (*RestaurantMessage, error)
	grpc.ClientStream
}

type restaurantServiceGetRestaurantInfoByNameClient struct {
	grpc.ClientStream
}

func (x *restaurantServiceGetRestaurantInfoByNameClient) Recv() (*RestaurantMessage, error) {
	m := new(RestaurantMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *restaurantServiceClient) GetRestaurantInfoByAddress(ctx context.Context, in *RestaurantRequestAddress, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByAddressClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RestaurantService_serviceDesc.Streams[1], "/sdccFoodDelivery.restaurantService/getRestaurantInfoByAddress", opts...)
	if err != nil {
		return nil, err
	}
	x := &restaurantServiceGetRestaurantInfoByAddressClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RestaurantService_GetRestaurantInfoByAddressClient interface {
	Recv() (*RestaurantMessage, error)
	grpc.ClientStream
}

type restaurantServiceGetRestaurantInfoByAddressClient struct {
	grpc.ClientStream
}

func (x *restaurantServiceGetRestaurantInfoByAddressClient) Recv() (*RestaurantMessage, error) {
	m := new(RestaurantMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *restaurantServiceClient) GetRestaurantInfoByCity(ctx context.Context, in *RestaurantRequestCity, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByCityClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RestaurantService_serviceDesc.Streams[2], "/sdccFoodDelivery.restaurantService/getRestaurantInfoByCity", opts...)
	if err != nil {
		return nil, err
	}
	x := &restaurantServiceGetRestaurantInfoByCityClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RestaurantService_GetRestaurantInfoByCityClient interface {
	Recv() (*RestaurantMessage, error)
	grpc.ClientStream
}

type restaurantServiceGetRestaurantInfoByCityClient struct {
	grpc.ClientStream
}

func (x *restaurantServiceGetRestaurantInfoByCityClient) Recv() (*RestaurantMessage, error) {
	m := new(RestaurantMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *restaurantServiceClient) GetRestaurantInfoByTAG(ctx context.Context, in *RestaurantRequestTAG, opts ...grpc.CallOption) (RestaurantService_GetRestaurantInfoByTAGClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RestaurantService_serviceDesc.Streams[3], "/sdccFoodDelivery.restaurantService/getRestaurantInfoByTAG", opts...)
	if err != nil {
		return nil, err
	}
	x := &restaurantServiceGetRestaurantInfoByTAGClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RestaurantService_GetRestaurantInfoByTAGClient interface {
	Recv() (*RestaurantMessage, error)
	grpc.ClientStream
}

type restaurantServiceGetRestaurantInfoByTAGClient struct {
	grpc.ClientStream
}

func (x *restaurantServiceGetRestaurantInfoByTAGClient) Recv() (*RestaurantMessage, error) {
	m := new(RestaurantMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *restaurantServiceClient) GetRestaurantMenu(ctx context.Context, in *RestaurantRequestID, opts ...grpc.CallOption) (RestaurantService_GetRestaurantMenuClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RestaurantService_serviceDesc.Streams[4], "/sdccFoodDelivery.restaurantService/getRestaurantMenu", opts...)
	if err != nil {
		return nil, err
	}
	x := &restaurantServiceGetRestaurantMenuClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RestaurantService_GetRestaurantMenuClient interface {
	Recv() (*RestaurantMessageMenu, error)
	grpc.ClientStream
}

type restaurantServiceGetRestaurantMenuClient struct {
	grpc.ClientStream
}

func (x *restaurantServiceGetRestaurantMenuClient) Recv() (*RestaurantMessageMenu, error) {
	m := new(RestaurantMessageMenu)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *restaurantServiceClient) GetAllRestaurants(ctx context.Context, in *RestaurantsRequest, opts ...grpc.CallOption) (RestaurantService_GetAllRestaurantsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RestaurantService_serviceDesc.Streams[5], "/sdccFoodDelivery.restaurantService/getAllRestaurants", opts...)
	if err != nil {
		return nil, err
	}
	x := &restaurantServiceGetAllRestaurantsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RestaurantService_GetAllRestaurantsClient interface {
	Recv() (*RestaurantMessage, error)
	grpc.ClientStream
}

type restaurantServiceGetAllRestaurantsClient struct {
	grpc.ClientStream
}

func (x *restaurantServiceGetAllRestaurantsClient) Recv() (*RestaurantMessage, error) {
	m := new(RestaurantMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *restaurantServiceClient) GetRestaurantInfoById(ctx context.Context, in *RestaurantRequestID, opts ...grpc.CallOption) (*RestaurantMessage, error) {
	out := new(RestaurantMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.restaurantService/getRestaurantInfoById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) DeleteRestaurant(ctx context.Context, in *DeleteRestaurantRequest, opts ...grpc.CallOption) (*CommitOK, error) {
	out := new(CommitOK)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.restaurantService/deleteRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) ModifyRestaurant(ctx context.Context, in *ModifyRestaurantRequest, opts ...grpc.CallOption) (*CommitOK, error) {
	out := new(CommitOK)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.restaurantService/modifyRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) AddRestaurant(ctx context.Context, in *AddRestaurantRequest, opts ...grpc.CallOption) (*CommitOK, error) {
	out := new(CommitOK)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.restaurantService/addRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RestaurantServiceServer is the server API for RestaurantService service.
type RestaurantServiceServer interface {
	//ask for a name restaurants infos
	GetRestaurantInfoByName(*RestaurantRequestName, RestaurantService_GetRestaurantInfoByNameServer) error
	GetRestaurantInfoByAddress(*RestaurantRequestAddress, RestaurantService_GetRestaurantInfoByAddressServer) error
	GetRestaurantInfoByCity(*RestaurantRequestCity, RestaurantService_GetRestaurantInfoByCityServer) error
	GetRestaurantInfoByTAG(*RestaurantRequestTAG, RestaurantService_GetRestaurantInfoByTAGServer) error
	GetRestaurantMenu(*RestaurantRequestID, RestaurantService_GetRestaurantMenuServer) error
	GetAllRestaurants(*RestaurantsRequest, RestaurantService_GetAllRestaurantsServer) error
	GetRestaurantInfoById(context.Context, *RestaurantRequestID) (*RestaurantMessage, error)
	//delete restaurant by id
	DeleteRestaurant(context.Context, *DeleteRestaurantRequest) (*CommitOK, error)
	//modify restaurant by ID
	ModifyRestaurant(context.Context, *ModifyRestaurantRequest) (*CommitOK, error)
	//add new restaurant
	AddRestaurant(context.Context, *AddRestaurantRequest) (*CommitOK, error)
}

// UnimplementedRestaurantServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRestaurantServiceServer struct {
}

func (*UnimplementedRestaurantServiceServer) GetRestaurantInfoByName(req *RestaurantRequestName, srv RestaurantService_GetRestaurantInfoByNameServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRestaurantInfoByName not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetRestaurantInfoByAddress(req *RestaurantRequestAddress, srv RestaurantService_GetRestaurantInfoByAddressServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRestaurantInfoByAddress not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetRestaurantInfoByCity(req *RestaurantRequestCity, srv RestaurantService_GetRestaurantInfoByCityServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRestaurantInfoByCity not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetRestaurantInfoByTAG(req *RestaurantRequestTAG, srv RestaurantService_GetRestaurantInfoByTAGServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRestaurantInfoByTAG not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetRestaurantMenu(req *RestaurantRequestID, srv RestaurantService_GetRestaurantMenuServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRestaurantMenu not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetAllRestaurants(req *RestaurantsRequest, srv RestaurantService_GetAllRestaurantsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAllRestaurants not implemented")
}
func (*UnimplementedRestaurantServiceServer) GetRestaurantInfoById(ctx context.Context, req *RestaurantRequestID) (*RestaurantMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRestaurantInfoById not implemented")
}
func (*UnimplementedRestaurantServiceServer) DeleteRestaurant(ctx context.Context, req *DeleteRestaurantRequest) (*CommitOK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRestaurant not implemented")
}
func (*UnimplementedRestaurantServiceServer) ModifyRestaurant(ctx context.Context, req *ModifyRestaurantRequest) (*CommitOK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyRestaurant not implemented")
}
func (*UnimplementedRestaurantServiceServer) AddRestaurant(ctx context.Context, req *AddRestaurantRequest) (*CommitOK, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRestaurant not implemented")
}

func RegisterRestaurantServiceServer(s *grpc.Server, srv RestaurantServiceServer) {
	s.RegisterService(&_RestaurantService_serviceDesc, srv)
}

func _RestaurantService_GetRestaurantInfoByName_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestaurantRequestName)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RestaurantServiceServer).GetRestaurantInfoByName(m, &restaurantServiceGetRestaurantInfoByNameServer{stream})
}

type RestaurantService_GetRestaurantInfoByNameServer interface {
	Send(*RestaurantMessage) error
	grpc.ServerStream
}

type restaurantServiceGetRestaurantInfoByNameServer struct {
	grpc.ServerStream
}

func (x *restaurantServiceGetRestaurantInfoByNameServer) Send(m *RestaurantMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _RestaurantService_GetRestaurantInfoByAddress_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestaurantRequestAddress)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RestaurantServiceServer).GetRestaurantInfoByAddress(m, &restaurantServiceGetRestaurantInfoByAddressServer{stream})
}

type RestaurantService_GetRestaurantInfoByAddressServer interface {
	Send(*RestaurantMessage) error
	grpc.ServerStream
}

type restaurantServiceGetRestaurantInfoByAddressServer struct {
	grpc.ServerStream
}

func (x *restaurantServiceGetRestaurantInfoByAddressServer) Send(m *RestaurantMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _RestaurantService_GetRestaurantInfoByCity_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestaurantRequestCity)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RestaurantServiceServer).GetRestaurantInfoByCity(m, &restaurantServiceGetRestaurantInfoByCityServer{stream})
}

type RestaurantService_GetRestaurantInfoByCityServer interface {
	Send(*RestaurantMessage) error
	grpc.ServerStream
}

type restaurantServiceGetRestaurantInfoByCityServer struct {
	grpc.ServerStream
}

func (x *restaurantServiceGetRestaurantInfoByCityServer) Send(m *RestaurantMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _RestaurantService_GetRestaurantInfoByTAG_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestaurantRequestTAG)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RestaurantServiceServer).GetRestaurantInfoByTAG(m, &restaurantServiceGetRestaurantInfoByTAGServer{stream})
}

type RestaurantService_GetRestaurantInfoByTAGServer interface {
	Send(*RestaurantMessage) error
	grpc.ServerStream
}

type restaurantServiceGetRestaurantInfoByTAGServer struct {
	grpc.ServerStream
}

func (x *restaurantServiceGetRestaurantInfoByTAGServer) Send(m *RestaurantMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _RestaurantService_GetRestaurantMenu_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestaurantRequestID)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RestaurantServiceServer).GetRestaurantMenu(m, &restaurantServiceGetRestaurantMenuServer{stream})
}

type RestaurantService_GetRestaurantMenuServer interface {
	Send(*RestaurantMessageMenu) error
	grpc.ServerStream
}

type restaurantServiceGetRestaurantMenuServer struct {
	grpc.ServerStream
}

func (x *restaurantServiceGetRestaurantMenuServer) Send(m *RestaurantMessageMenu) error {
	return x.ServerStream.SendMsg(m)
}

func _RestaurantService_GetAllRestaurants_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestaurantsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RestaurantServiceServer).GetAllRestaurants(m, &restaurantServiceGetAllRestaurantsServer{stream})
}

type RestaurantService_GetAllRestaurantsServer interface {
	Send(*RestaurantMessage) error
	grpc.ServerStream
}

type restaurantServiceGetAllRestaurantsServer struct {
	grpc.ServerStream
}

func (x *restaurantServiceGetAllRestaurantsServer) Send(m *RestaurantMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _RestaurantService_GetRestaurantInfoById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestaurantRequestID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetRestaurantInfoById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.restaurantService/GetRestaurantInfoById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetRestaurantInfoById(ctx, req.(*RestaurantRequestID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_DeleteRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRestaurantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).DeleteRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.restaurantService/DeleteRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).DeleteRestaurant(ctx, req.(*DeleteRestaurantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_ModifyRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyRestaurantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).ModifyRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.restaurantService/ModifyRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).ModifyRestaurant(ctx, req.(*ModifyRestaurantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_AddRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRestaurantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).AddRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.restaurantService/AddRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).AddRestaurant(ctx, req.(*AddRestaurantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RestaurantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sdccFoodDelivery.restaurantService",
	HandlerType: (*RestaurantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getRestaurantInfoById",
			Handler:    _RestaurantService_GetRestaurantInfoById_Handler,
		},
		{
			MethodName: "deleteRestaurant",
			Handler:    _RestaurantService_DeleteRestaurant_Handler,
		},
		{
			MethodName: "modifyRestaurant",
			Handler:    _RestaurantService_ModifyRestaurant_Handler,
		},
		{
			MethodName: "addRestaurant",
			Handler:    _RestaurantService_AddRestaurant_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getRestaurantInfoByName",
			Handler:       _RestaurantService_GetRestaurantInfoByName_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getRestaurantInfoByAddress",
			Handler:       _RestaurantService_GetRestaurantInfoByAddress_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getRestaurantInfoByCity",
			Handler:       _RestaurantService_GetRestaurantInfoByCity_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getRestaurantInfoByTAG",
			Handler:       _RestaurantService_GetRestaurantInfoByTAG_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getRestaurantMenu",
			Handler:       _RestaurantService_GetRestaurantMenu_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getAllRestaurants",
			Handler:       _RestaurantService_GetAllRestaurants_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto.proto",
}

// SdccUserServiceClient is the client API for SdccUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SdccUserServiceClient interface {
	Save(ctx context.Context, in *UserInfoMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	DeleteByID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	FindByID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*UserMessage, error)
	UpdateUsername(ctx context.Context, in *UpdateUsernameMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	UpdatePassword(ctx context.Context, in *UpdatePasswordMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	UpdateAddress(ctx context.Context, in *UpdateAddressMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	UpdateMail(ctx context.Context, in *UpdateMailMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	UpdatePaymentMethod(ctx context.Context, in *UpdatePaymentMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	UpdatePreferiti(ctx context.Context, in *UpdatePreferitiMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
	GetUserPreferitiByID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (SdccUserService_GetUserPreferitiByIDClient, error)
}

type sdccUserServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSdccUserServiceClient(cc grpc.ClientConnInterface) SdccUserServiceClient {
	return &sdccUserServiceClient{cc}
}

func (c *sdccUserServiceClient) Save(ctx context.Context, in *UserInfoMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) DeleteByID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/deleteByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) FindByID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*UserMessage, error) {
	out := new(UserMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/findByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) UpdateUsername(ctx context.Context, in *UpdateUsernameMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/updateUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/updatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) UpdateAddress(ctx context.Context, in *UpdateAddressMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/updateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) UpdateMail(ctx context.Context, in *UpdateMailMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/updateMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) UpdatePaymentMethod(ctx context.Context, in *UpdatePaymentMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/updatePaymentMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) UpdatePreferiti(ctx context.Context, in *UpdatePreferitiMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_user_service/updatePreferiti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccUserServiceClient) GetUserPreferitiByID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (SdccUserService_GetUserPreferitiByIDClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SdccUserService_serviceDesc.Streams[0], "/sdccFoodDelivery.sdcc_user_service/getUserPreferitiByID", opts...)
	if err != nil {
		return nil, err
	}
	x := &sdccUserServiceGetUserPreferitiByIDClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SdccUserService_GetUserPreferitiByIDClient interface {
	Recv() (*PreferitiMessage, error)
	grpc.ClientStream
}

type sdccUserServiceGetUserPreferitiByIDClient struct {
	grpc.ClientStream
}

func (x *sdccUserServiceGetUserPreferitiByIDClient) Recv() (*PreferitiMessage, error) {
	m := new(PreferitiMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SdccUserServiceServer is the server API for SdccUserService service.
type SdccUserServiceServer interface {
	Save(context.Context, *UserInfoMessage) (*BooleanMessage, error)
	DeleteByID(context.Context, *IDMessage) (*BooleanMessage, error)
	FindByID(context.Context, *IDMessage) (*UserMessage, error)
	UpdateUsername(context.Context, *UpdateUsernameMessage) (*BooleanMessage, error)
	UpdatePassword(context.Context, *UpdatePasswordMessage) (*BooleanMessage, error)
	UpdateAddress(context.Context, *UpdateAddressMessage) (*BooleanMessage, error)
	UpdateMail(context.Context, *UpdateMailMessage) (*BooleanMessage, error)
	UpdatePaymentMethod(context.Context, *UpdatePaymentMessage) (*BooleanMessage, error)
	UpdatePreferiti(context.Context, *UpdatePreferitiMessage) (*BooleanMessage, error)
	GetUserPreferitiByID(*IDMessage, SdccUserService_GetUserPreferitiByIDServer) error
}

// UnimplementedSdccUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSdccUserServiceServer struct {
}

func (*UnimplementedSdccUserServiceServer) Save(ctx context.Context, req *UserInfoMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}
func (*UnimplementedSdccUserServiceServer) DeleteByID(ctx context.Context, req *IDMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteByID not implemented")
}
func (*UnimplementedSdccUserServiceServer) FindByID(ctx context.Context, req *IDMessage) (*UserMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByID not implemented")
}
func (*UnimplementedSdccUserServiceServer) UpdateUsername(ctx context.Context, req *UpdateUsernameMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUsername not implemented")
}
func (*UnimplementedSdccUserServiceServer) UpdatePassword(ctx context.Context, req *UpdatePasswordMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePassword not implemented")
}
func (*UnimplementedSdccUserServiceServer) UpdateAddress(ctx context.Context, req *UpdateAddressMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAddress not implemented")
}
func (*UnimplementedSdccUserServiceServer) UpdateMail(ctx context.Context, req *UpdateMailMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMail not implemented")
}
func (*UnimplementedSdccUserServiceServer) UpdatePaymentMethod(ctx context.Context, req *UpdatePaymentMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePaymentMethod not implemented")
}
func (*UnimplementedSdccUserServiceServer) UpdatePreferiti(ctx context.Context, req *UpdatePreferitiMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePreferiti not implemented")
}
func (*UnimplementedSdccUserServiceServer) GetUserPreferitiByID(req *IDMessage, srv SdccUserService_GetUserPreferitiByIDServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUserPreferitiByID not implemented")
}

func RegisterSdccUserServiceServer(s *grpc.Server, srv SdccUserServiceServer) {
	s.RegisterService(&_SdccUserService_serviceDesc, srv)
}

func _SdccUserService_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).Save(ctx, req.(*UserInfoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_DeleteByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).DeleteByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/DeleteByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).DeleteByID(ctx, req.(*IDMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_FindByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).FindByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/FindByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).FindByID(ctx, req.(*IDMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_UpdateUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUsernameMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).UpdateUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/UpdateUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).UpdateUsername(ctx, req.(*UpdateUsernameMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).UpdatePassword(ctx, req.(*UpdatePasswordMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_UpdateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddressMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).UpdateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/UpdateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).UpdateAddress(ctx, req.(*UpdateAddressMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_UpdateMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMailMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).UpdateMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/UpdateMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).UpdateMail(ctx, req.(*UpdateMailMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_UpdatePaymentMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePaymentMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).UpdatePaymentMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/UpdatePaymentMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).UpdatePaymentMethod(ctx, req.(*UpdatePaymentMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_UpdatePreferiti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePreferitiMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccUserServiceServer).UpdatePreferiti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_user_service/UpdatePreferiti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccUserServiceServer).UpdatePreferiti(ctx, req.(*UpdatePreferitiMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccUserService_GetUserPreferitiByID_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IDMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SdccUserServiceServer).GetUserPreferitiByID(m, &sdccUserServiceGetUserPreferitiByIDServer{stream})
}

type SdccUserService_GetUserPreferitiByIDServer interface {
	Send(*PreferitiMessage) error
	grpc.ServerStream
}

type sdccUserServiceGetUserPreferitiByIDServer struct {
	grpc.ServerStream
}

func (x *sdccUserServiceGetUserPreferitiByIDServer) Send(m *PreferitiMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _SdccUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sdccFoodDelivery.sdcc_user_service",
	HandlerType: (*SdccUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "save",
			Handler:    _SdccUserService_Save_Handler,
		},
		{
			MethodName: "deleteByID",
			Handler:    _SdccUserService_DeleteByID_Handler,
		},
		{
			MethodName: "findByID",
			Handler:    _SdccUserService_FindByID_Handler,
		},
		{
			MethodName: "updateUsername",
			Handler:    _SdccUserService_UpdateUsername_Handler,
		},
		{
			MethodName: "updatePassword",
			Handler:    _SdccUserService_UpdatePassword_Handler,
		},
		{
			MethodName: "updateAddress",
			Handler:    _SdccUserService_UpdateAddress_Handler,
		},
		{
			MethodName: "updateMail",
			Handler:    _SdccUserService_UpdateMail_Handler,
		},
		{
			MethodName: "updatePaymentMethod",
			Handler:    _SdccUserService_UpdatePaymentMethod_Handler,
		},
		{
			MethodName: "updatePreferiti",
			Handler:    _SdccUserService_UpdatePreferiti_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getUserPreferitiByID",
			Handler:       _SdccUserService_GetUserPreferitiByID_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto.proto",
}

// SdccMailServiceClient is the client API for SdccMailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SdccMailServiceClient interface {
	GetUserMail(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*UserMessage, error)
	SendMail(ctx context.Context, in *TagMessage, opts ...grpc.CallOption) (*BooleanMessage, error)
}

type sdccMailServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSdccMailServiceClient(cc grpc.ClientConnInterface) SdccMailServiceClient {
	return &sdccMailServiceClient{cc}
}

func (c *sdccMailServiceClient) GetUserMail(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*UserMessage, error) {
	out := new(UserMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_mail_service/getUserMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sdccMailServiceClient) SendMail(ctx context.Context, in *TagMessage, opts ...grpc.CallOption) (*BooleanMessage, error) {
	out := new(BooleanMessage)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.sdcc_mail_service/sendMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SdccMailServiceServer is the server API for SdccMailService service.
type SdccMailServiceServer interface {
	GetUserMail(context.Context, *IDMessage) (*UserMessage, error)
	SendMail(context.Context, *TagMessage) (*BooleanMessage, error)
}

// UnimplementedSdccMailServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSdccMailServiceServer struct {
}

func (*UnimplementedSdccMailServiceServer) GetUserMail(ctx context.Context, req *IDMessage) (*UserMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserMail not implemented")
}
func (*UnimplementedSdccMailServiceServer) SendMail(ctx context.Context, req *TagMessage) (*BooleanMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMail not implemented")
}

func RegisterSdccMailServiceServer(s *grpc.Server, srv SdccMailServiceServer) {
	s.RegisterService(&_SdccMailService_serviceDesc, srv)
}

func _SdccMailService_GetUserMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccMailServiceServer).GetUserMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_mail_service/GetUserMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccMailServiceServer).GetUserMail(ctx, req.(*IDMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SdccMailService_SendMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SdccMailServiceServer).SendMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.sdcc_mail_service/SendMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SdccMailServiceServer).SendMail(ctx, req.(*TagMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _SdccMailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sdccFoodDelivery.sdcc_mail_service",
	HandlerType: (*SdccMailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getUserMail",
			Handler:    _SdccMailService_GetUserMail_Handler,
		},
		{
			MethodName: "sendMail",
			Handler:    _SdccMailService_SendMail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}

// RecommendationServiceClient is the client API for RecommendationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecommendationServiceClient interface {
	GetRecommendations(ctx context.Context, in *GetRecommendationsRequest, opts ...grpc.CallOption) (*GetRecommendationsResponse, error)
}

type recommendationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecommendationServiceClient(cc grpc.ClientConnInterface) RecommendationServiceClient {
	return &recommendationServiceClient{cc}
}

func (c *recommendationServiceClient) GetRecommendations(ctx context.Context, in *GetRecommendationsRequest, opts ...grpc.CallOption) (*GetRecommendationsResponse, error) {
	out := new(GetRecommendationsResponse)
	err := c.cc.Invoke(ctx, "/sdccFoodDelivery.recommendationService/getRecommendations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecommendationServiceServer is the server API for RecommendationService service.
type RecommendationServiceServer interface {
	GetRecommendations(context.Context, *GetRecommendationsRequest) (*GetRecommendationsResponse, error)
}

// UnimplementedRecommendationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecommendationServiceServer struct {
}

func (*UnimplementedRecommendationServiceServer) GetRecommendations(ctx context.Context, req *GetRecommendationsRequest) (*GetRecommendationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecommendations not implemented")
}

func RegisterRecommendationServiceServer(s *grpc.Server, srv RecommendationServiceServer) {
	s.RegisterService(&_RecommendationService_serviceDesc, srv)
}

func _RecommendationService_GetRecommendations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecommendationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecommendationServiceServer).GetRecommendations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sdccFoodDelivery.recommendationService/GetRecommendations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecommendationServiceServer).GetRecommendations(ctx, req.(*GetRecommendationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecommendationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sdccFoodDelivery.recommendationService",
	HandlerType: (*RecommendationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getRecommendations",
			Handler:    _RecommendationService_GetRecommendations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto.proto",
}
